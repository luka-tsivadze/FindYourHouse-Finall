{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/ImageState.js", "../../../../../../node_modules/ol/has.js", "../../../../../../node_modules/ol/Image.js", "../../../../../../node_modules/color-parse/node_modules/color-name/index.js", "../../../../../../node_modules/color-parse/index.js", "../../../../../../node_modules/color-space/rgb.js", "../../../../../../node_modules/color-space/hsl.js", "../../../../../../node_modules/color-rgba/index.js", "../../../../../../node_modules/color-space/xyz.js", "../../../../../../node_modules/color-space/luv.js", "../../../../../../node_modules/color-space/lchuv.js", "../../../../../../node_modules/ol/color.js", "../../../../../../node_modules/ol/dom.js", "../../../../../../node_modules/ol/size.js"],
  "sourcesContent": ["/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4\n};", "/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined' ? navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 = SAFARI && (ua.includes('version/15.4') || /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' && typeof OffscreenCanvas !== 'undefined' && self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      }\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n}();", "/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport { toPromise } from './functions.js';\nimport { CREATE_IMAGE_BITMAP, IMAGE_DECODE } from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */this.resolution;\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution) ? resolution[0] : resolution;\n        toPromise(() => this.loader(this.getExtent(), requestResolution, this.getPixelRatio())).then(image => {\n          if ('image' in image) {\n            this.image_ = image.image;\n          }\n          if ('extent' in image) {\n            this.extent = image.extent;\n          }\n          if ('resolution' in image) {\n            this.resolution = image.resolution;\n          }\n          if ('pixelRatio' in image) {\n            this.pixelRatio_ = image.pixelRatio;\n          }\n          if (image instanceof HTMLImageElement || CREATE_IMAGE_BITMAP && image instanceof ImageBitmap || image instanceof HTMLCanvasElement || image instanceof HTMLVideoElement) {\n            this.image_ = image;\n          }\n          this.state = ImageState.LOADED;\n        }).catch(error => {\n          this.state = ImageState.ERROR;\n          console.error(error); // eslint-disable-line no-console\n        }).finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */image;\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n  const listenerKeys = [listenOnce(img, EventType.LOAD, function () {\n    loaded = true;\n    if (!decoding) {\n      loadHandler();\n    }\n  })];\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img.decode().then(function () {\n      if (listening) {\n        loadHandler();\n      }\n    }).catch(function (error) {\n      if (listening) {\n        if (loaded) {\n          loadHandler();\n        } else {\n          errorHandler();\n        }\n      }\n    });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE ? new Promise((resolve, reject) => image.decode().then(() => resolve(image)).catch(e => image.complete && image.width ? resolve(image) : reject(e))) : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP ? image.decode().then(() => createImageBitmap(image)).catch(e => {\n    if (image.complete && image.width) {\n      return image;\n    }\n    throw e;\n  }) : decodeFallback(image);\n}\nexport default ImageWrapper;", "export default {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};", "/**\n * @module color-parse\n */\nimport names from 'color-name';\nexport default parse;\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n  red: 0,\n  orange: 60,\n  yellow: 120,\n  green: 180,\n  blue: 240,\n  purple: 300\n};\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n  var m,\n    parts = [],\n    alpha = 1,\n    space;\n\n  //numeric case\n  if (typeof cstr === 'number') {\n    return {\n      space: 'rgb',\n      values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff],\n      alpha: 1\n    };\n  }\n  if (typeof cstr === 'number') return {\n    space: 'rgb',\n    values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff],\n    alpha: 1\n  };\n  cstr = String(cstr).toLowerCase();\n\n  //keyword\n  if (names[cstr]) {\n    parts = names[cstr].slice();\n    space = 'rgb';\n  }\n\n  //reserved words\n  else if (cstr === 'transparent') {\n    alpha = 0;\n    space = 'rgb';\n    parts = [0, 0, 0];\n  }\n\n  //hex\n  else if (cstr[0] === '#') {\n    var base = cstr.slice(1);\n    var size = base.length;\n    var isShort = size <= 4;\n    alpha = 1;\n    if (isShort) {\n      parts = [parseInt(base[0] + base[0], 16), parseInt(base[1] + base[1], 16), parseInt(base[2] + base[2], 16)];\n      if (size === 4) {\n        alpha = parseInt(base[3] + base[3], 16) / 255;\n      }\n    } else {\n      parts = [parseInt(base[0] + base[1], 16), parseInt(base[2] + base[3], 16), parseInt(base[4] + base[5], 16)];\n      if (size === 8) {\n        alpha = parseInt(base[6] + base[7], 16) / 255;\n      }\n    }\n    if (!parts[0]) parts[0] = 0;\n    if (!parts[1]) parts[1] = 0;\n    if (!parts[2]) parts[2] = 0;\n    space = 'rgb';\n  }\n\n  // color space\n  else if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n    var name = m[1];\n    space = name.replace(/a$/, '');\n    var dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3;\n    parts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/);\n\n    // color(srgb-linear x x x) -> srgb-linear(x x x)\n    if (space === 'color') space = parts.shift();\n    parts = parts.map(function (x, i) {\n      //<percentage>\n      if (x[x.length - 1] === '%') {\n        x = parseFloat(x) / 100;\n        // alpha -> 0..1\n        if (i === 3) return x;\n        // rgb -> 0..255\n        if (space === 'rgb') return x * 255;\n        // hsl, hwb H -> 0..100\n        if (space[0] === 'h') return x * 100;\n        // lch, lab L -> 0..100\n        if (space[0] === 'l' && !i) return x * 100;\n        // lab A B -> -125..125\n        if (space === 'lab') return x * 125;\n        // lch C -> 0..150, H -> 0..360\n        if (space === 'lch') return i < 2 ? x * 150 : x * 360;\n        // oklch/oklab L -> 0..1\n        if (space[0] === 'o' && !i) return x;\n        // oklab A B -> -0.4..0.4\n        if (space === 'oklab') return x * 0.4;\n        // oklch C -> 0..0.4, H -> 0..360\n        if (space === 'oklch') return i < 2 ? x * 0.4 : x * 360;\n        // color(xxx) -> 0..1\n        return x;\n      }\n\n      //hue\n      if (space[i] === 'h' || i === 2 && space[space.length - 1] === 'h') {\n        //<base-hue>\n        if (baseHues[x] !== undefined) return baseHues[x];\n        //<deg>\n        if (x.endsWith('deg')) return parseFloat(x);\n        //<turn>\n        if (x.endsWith('turn')) return parseFloat(x) * 360;\n        if (x.endsWith('grad')) return parseFloat(x) * 360 / 400;\n        if (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI;\n      }\n      if (x === 'none') return 0;\n      return parseFloat(x);\n    });\n    alpha = parts.length > dims ? parts.pop() : 1;\n  }\n\n  //named channels case\n  else if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n    parts = cstr.match(/([0-9]+)/g).map(function (value) {\n      return parseFloat(value);\n    });\n    space = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb';\n  }\n  return {\n    space,\n    values: parts,\n    alpha\n  };\n}", "/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\nconst rgb = {\n  name: 'rgb',\n  min: [0, 0, 0],\n  max: [255, 255, 255],\n  channel: ['red', 'green', 'blue'],\n  alias: ['RGB']\n};\nexport default rgb;", "/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\nvar hsl = {\n  name: 'hsl',\n  min: [0, 0, 0],\n  max: [360, 100, 100],\n  channel: ['hue', 'saturation', 'lightness'],\n  alias: ['HSL'],\n  rgb: function (hsl) {\n    var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val,\n      i = 0;\n    if (s === 0) return val = l * 255, [val, val, val];\n    t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n    for (; i < 3;) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 ? t3++ : t3 > 1 && t3--;\n      val = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 : 2 * t3 < 1 ? t2 : 3 * t3 < 2 ? t1 + (t2 - t1) * (2 / 3 - t3) * 6 : t1;\n      rgb[i++] = val * 255;\n    }\n    return rgb;\n  }\n};\nexport default hsl;\n\n//extend rgb\nrgb.hsl = function (rgb) {\n  var r = rgb[0] / 255,\n    g = rgb[1] / 255,\n    b = rgb[2] / 255,\n    min = Math.min(r, g, b),\n    max = Math.max(r, g, b),\n    delta = max - min,\n    h,\n    s,\n    l;\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  //FIXME h is possibly undefined\n  //@ts-ignore\n  h = Math.min(h * 60, 360);\n  if (h < 0) {\n    h += 360;\n  }\n  l = (min + max) / 2;\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n  return [h, s * 100, l * 100];\n};", "/** @module  color-rgba */\nimport parse from 'color-parse';\nimport rgb from 'color-space/rgb.js';\nimport hsl from 'color-space/hsl.js';\nexport default function rgba(color) {\n  // template literals\n  if (Array.isArray(color) && color.raw) color = String.raw(...arguments);\n  if (color instanceof Number) color = +color;\n  var values, i, l;\n\n  //attempt to parse non-array arguments\n  var parsed = parse(color);\n  if (!parsed.space) return [];\n  const min = parsed.space[0] === 'h' ? hsl.min : rgb.min;\n  const max = parsed.space[0] === 'h' ? hsl.max : rgb.max;\n  values = Array(3);\n  values[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0]);\n  values[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1]);\n  values[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2]);\n  if (parsed.space[0] === 'h') {\n    values = hsl.rgb(values);\n  }\n  values.push(Math.min(Math.max(parsed.alpha, 0), 1));\n  return values;\n}", "/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\nconst xyz = {\n  name: 'xyz',\n  min: [0, 0, 0],\n  channel: ['X', 'Y', 'Z'],\n  alias: ['XYZ', 'ciexyz', 'cie1931'],\n  // Whitepoint reference values with observer/illuminant\n  // http://en.wikipedia.org/wiki/Standard_illuminant\n  whitepoint: {\n    //1931 2°\n    2: {\n      //incadescent\n      A: [109.85, 100, 35.585],\n      // B:[],\n      C: [98.074, 100, 118.232],\n      D50: [96.422, 100, 82.521],\n      D55: [95.682, 100, 92.149],\n      //daylight\n      D65: [95.045592705167, 100, 108.9057750759878],\n      D75: [94.972, 100, 122.638],\n      //flourescent\n      // F1: [],\n      F2: [99.187, 100, 67.395],\n      // F3: [],\n      // F4: [],\n      // F5: [],\n      // F6:[],\n      F7: [95.044, 100, 108.755],\n      // F8: [],\n      // F9: [],\n      // F10: [],\n      F11: [100.966, 100, 64.370],\n      // F12: [],\n      E: [100, 100, 100]\n    },\n    //1964  10°\n    10: {\n      //incadescent\n      A: [111.144, 100, 35.200],\n      C: [97.285, 100, 116.145],\n      D50: [96.720, 100, 81.427],\n      D55: [95.799, 100, 90.926],\n      //daylight\n      D65: [94.811, 100, 107.304],\n      D75: [94.416, 100, 120.641],\n      //flourescent\n      F2: [103.280, 100, 69.026],\n      F7: [95.792, 100, 107.687],\n      F11: [103.866, 100, 65.627],\n      E: [100, 100, 100]\n    }\n  }\n};\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array<number>} _xyz Array of xyz values\n * @param {Array<number>} white Whitepoint reference\n * @return {Array<number>} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n  // FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n  white = white || xyz.whitepoint[2].E;\n  var x = _xyz[0] / white[0],\n    y = _xyz[1] / white[1],\n    z = _xyz[2] / white[2],\n    r,\n    g,\n    b;\n\n  // assume sRGB\n  // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n  r = x * 3.240969941904521 + y * -1.537383177570093 + z * -0.498610760293;\n  g = x * -0.96924363628087 + y * 1.87596750150772 + z * 0.041555057407175;\n  b = x * 0.055630079696993 + y * -0.20397695888897 + z * 1.056971514242878;\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n};\n\n/**\n * RGB to XYZ\n *\n * @param {Array<number>} rgb RGB channels\n *\n * @return {Array<number>} XYZ channels\n */\nrgb.xyz = function (rgb, white) {\n  var r = rgb[0] / 255,\n    g = rgb[1] / 255,\n    b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.41239079926595 + g * 0.35758433938387 + b * 0.18048078840183;\n  var y = r * 0.21263900587151 + g * 0.71516867876775 + b * 0.072192315360733;\n  var z = r * 0.019330818715591 + g * 0.11919477979462 + b * 0.95053215224966;\n  white = white || xyz.whitepoint[2].E;\n  return [x * white[0], y * white[1], z * white[2]];\n};\nexport default xyz;", "/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\nimport xyz from './xyz.js';\nvar luv = {\n  name: 'luv',\n  //NOTE: luv has no rigidly defined limits\n  //easyrgb fails to get proper coords\n  //boronine states no rigid limits\n  //colorMine refers this ones:\n  min: [0, -134, -140],\n  max: [100, 224, 122],\n  channel: ['lightness', 'u', 'v'],\n  alias: ['LUV', 'cieluv', 'cie1976'],\n  xyz: function (arg, i, o) {\n    var _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n    l = arg[0], u = arg[1], v = arg[2];\n    if (l === 0) return [0, 0, 0];\n\n    //get constants\n    //var e = 0.008856451679035631; //(6/29)^3\n    var k = 0.0011070564598794539; //(3/29)^3\n\n    //get illuminant/observer\n    i = i || 'D65';\n    o = o || 2;\n    xn = xyz.whitepoint[o][i][0];\n    yn = xyz.whitepoint[o][i][1];\n    zn = xyz.whitepoint[o][i][2];\n    un = 4 * xn / (xn + 15 * yn + 3 * zn);\n    vn = 9 * yn / (xn + 15 * yn + 3 * zn);\n    // un = 0.19783000664283;\n    // vn = 0.46831999493879;\n\n    _u = u / (13 * l) + un || 0;\n    _v = v / (13 * l) + vn || 0;\n    y = l > 8 ? yn * Math.pow((l + 16) / 116, 3) : yn * l * k;\n\n    //wikipedia method\n    x = y * 9 * _u / (4 * _v) || 0;\n    z = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n    //boronine method\n    //https://github.com/boronine/husl/blob/master/husl.coffee#L201\n    // x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n    // z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n    return [x, y, z];\n  }\n};\nexport default luv;\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function (arg, i, o) {\n  var _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n  //get constants\n  var e = 0.008856451679035631; //(6/29)^3\n  var k = 903.2962962962961; //(29/3)^3\n\n  //get illuminant/observer coords\n  i = i || 'D65';\n  o = o || 2;\n  xn = xyz.whitepoint[o][i][0];\n  yn = xyz.whitepoint[o][i][1];\n  zn = xyz.whitepoint[o][i][2];\n  un = 4 * xn / (xn + 15 * yn + 3 * zn);\n  vn = 9 * yn / (xn + 15 * yn + 3 * zn);\n  x = arg[0], y = arg[1], z = arg[2];\n  _u = 4 * x / (x + 15 * y + 3 * z) || 0;\n  _v = 9 * y / (x + 15 * y + 3 * z) || 0;\n  var yr = y / yn;\n  l = yr <= e ? k * yr : 116 * Math.pow(yr, 1 / 3) - 16;\n  u = 13 * l * (_u - un);\n  v = 13 * l * (_v - vn);\n  return [l, u, v];\n};", "/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n// cylindrical luv\nvar lchuv = {\n  name: 'lchuv',\n  channel: ['lightness', 'chroma', 'hue'],\n  alias: ['LCHuv', 'cielchuv'],\n  min: [0, 0, 0],\n  max: [100, 100, 360],\n  luv: function (luv) {\n    var l = luv[0],\n      c = luv[1],\n      h = luv[2],\n      u,\n      v,\n      hr;\n    hr = h / 360 * 2 * Math.PI;\n    u = c * Math.cos(hr);\n    v = c * Math.sin(hr);\n    return [l, u, v];\n  },\n  xyz: function (arg) {\n    return luv.xyz(lchuv.luv(arg));\n  }\n};\nexport default lchuv;\nluv.lchuv = function (luv) {\n  var l = luv[0],\n    u = luv[1],\n    v = luv[2];\n  var c = Math.sqrt(u * u + v * v);\n  var hr = Math.atan2(v, u);\n  var h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  return [l, c, h];\n};\nxyz.lchuv = function (arg) {\n  return luv.lchuv(xyz.luv(arg));\n};", "/**\n * @module ol/color\n */\nimport parseRgba from 'color-rgba';\nimport lchuv from 'color-space/lchuv.js';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport { clamp } from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp(color[0] + 0.5 | 0, 0, 255);\n  color[1] = clamp(color[1] + 0.5 | 0, 0, 255);\n  color[2] = clamp(color[2] + 0.5 | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = r + 0.5 | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = g + 0.5 | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = b + 0.5 | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}", "import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */canvas.getContext('2d', settings);\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}", "/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] * ratio + 0.5 | 0;\n  dest[1] = size[1] * ratio + 0.5 | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}"],
  "mappings": "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",
  "names": ["hsl", "rgb", "rgb", "luv"]
}
